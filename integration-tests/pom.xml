<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2012-2015 TORCH GmbH, 2015 Graylog, Inc.
  ~
  ~ This file is part of Graylog.
  ~
  ~ Graylog is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU General Public License as published by
  ~ the Free Software Foundation, either version 3 of the License, or
  ~ (at your option) any later version.
  ~
  ~ Graylog is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~ GNU General Public License for more details.
  ~
  ~ You should have received a copy of the GNU General Public License
  ~ along with Graylog.  If not, see <http://www.gnu.org/licenses />.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <prerequisites>
        <maven>3.1.0</maven>
    </prerequisites>

    <artifactId>integration-tests</artifactId>
    <packaging>jar</packaging>

    <parent>
        <groupId>org.graylog2</groupId>
        <artifactId>graylog2-parent</artifactId>
        <version>2.0.0-SNAPSHOT</version>
    </parent>

    <name>integration-tests</name>
    <description>Graylog REST API integration tests</description>

    <licenses>
        <license>
            <name>GNU General Public License (GPL) version 3.0</name>
            <url>https://www.gnu.org/licenses/gpl-3.0.html</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <properties>
        <skip.integration.tests>true</skip.integration.tests>
        <maven.deploy.skip>true</maven.deploy.skip>
        <it.elasticsearch.docker.image>elasticsearch</it.elasticsearch.docker.image>
        <it.elasticsearch.docker.version>2.1</it.elasticsearch.docker.version>
        <it.elasticsearch.cluster_name>graylog_test</it.elasticsearch.cluster_name>
        <it.mongodb.docker.image>mongo</it.mongodb.docker.image>
        <it.mongodb.docker.version>3.0</it.mongodb.docker.version>
        <it.mongodb.docker.database>graylog_test</it.mongodb.docker.database>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.github.zafarkhaja</groupId>
            <artifactId>java-semver</artifactId>
            <version>0.9.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.jayway.restassured</groupId>
            <artifactId>rest-assured</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.jayway.restassured</groupId>
            <artifactId>json-path</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-joda-time</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mongodb</groupId>
            <artifactId>mongo-java-driver</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.github.joschi.nosqlunit</groupId>
            <artifactId>nosqlunit-elasticsearch2</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>com.mycila</groupId>
                <artifactId>license-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <executions>
                    <execution>
                        <id>integration-test</id>
                        <goals>
                            <goal>integration-test</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>verify</id>
                        <goals>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <skip>${skip.integration.tests}</skip>
                    <forkCount>1</forkCount>
                    <includes>
                        <include>**/*Spec.java</include>
                        <include>**/*Test.java</include>
                        <include>**/*IT.java</include>
                    </includes>
                    <systemProperties>
                        <property>
                            <name>log4j.configuration</name>
                            <value>log4j2.xml</value>
                        </property>
                    </systemProperties>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>docker</id>
            <properties>
                <gl.baseuri>http://${it.graylog.docker.api.host}:${it.graylog.docker.api.port}</gl.baseuri>
                <gl.port>${it.graylog.docker.api.port}</gl.port>
                <mongodb.host>${it.mongodb.docker.host}</mongodb.host>
                <mongodb.port>${it.mongodb.docker.port}</mongodb.port>
                <mongodb.database>${it.mongodb.docker.database}</mongodb.database>
                <es.host>${it.elasticsearch.docker.tcp.host}</es.host>
                <es.port>${it.elasticsearch.docker.tcp.port}</es.port>
                <es.cluster.name>${it.elasticsearch.cluster_name}</es.cluster.name>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <configuration>
                            <skip>${skip.integration.tests}</skip>
                            <systemPropertyVariables>
                                <gl.baseuri>http://${it.graylog.docker.api.host}:${it.graylog.docker.api.port}</gl.baseuri>
                                <gl.port>${it.graylog.docker.api.port}</gl.port>
                                <mongodb.host>${it.mongodb.docker.host}</mongodb.host>
                                <mongodb.port>${it.mongodb.docker.port}</mongodb.port>
                                <mongodb.database>${it.mongodb.docker.database}</mongodb.database>
                                <es.host>${it.elasticsearch.docker.tcp.host}</es.host>
                                <es.port>${it.elasticsearch.docker.tcp.port}</es.port>
                                <es.cluster.name>${it.elasticsearch.cluster_name}</es.cluster.name>
                            </systemPropertyVariables>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.jolokia</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <configuration>
                            <logDate>ISO8601</logDate>
                            <skipTags>true</skipTags>
                            <verbose>true</verbose>
                            <images>
                                <image>
                                    <name>graylog-integration-test</name>
                                    <alias>graylog</alias>
                                    <build>
                                        <from>java:8u66-jre</from>
                                        <ports>
                                            <port>12900</port>
                                            <port>9350</port>
                                        </ports>
                                        <cmd>
                                            <shell>/maven/bin/graylog-test</shell>
                                        </cmd>
                                        <assembly>
                                            <descriptor>assembly.xml</descriptor>
                                        </assembly>
                                        <optimise>true</optimise>
                                        <runCmds>
                                            <run>tar --strip-components=1 -xzf /maven/graylog-${project.version}-*.tar.gz -C /maven</run>
                                        </runCmds>
                                    </build>
                                    <run>
                                        <env>
                                            <GRAYLOG_CONF>/maven/graylog.conf</GRAYLOG_CONF>
                                            <GRAYLOG_ELASTICSEARCH_HOST>_non_loopback_</GRAYLOG_ELASTICSEARCH_HOST>
                                            <ES_CLUSTER_NAME>${it.elasticsearch.cluster_name}</ES_CLUSTER_NAME>
                                            <MONGODB_DATABASE>${it.mongodb.docker.database}</MONGODB_DATABASE>
                                        </env>
                                        <ports>
                                            <port>+it.graylog.docker.api.host:it.graylog.docker.api.port:12900</port>
                                            <port>+it.graylog.docker.elasticsearch.host:it.graylog.docker.elasticsearch.port:9350</port>
                                        </ports>
                                        <links>
                                            <link>elasticsearch:es</link>
                                            <link>mongodb:mongo</link>
                                        </links>
                                        <wait>
                                            <log>org.graylog2.bootstrap.ServerBootstrap - Graylog server up and running.</log>
                                            <time>60000</time>
                                            <shutdown>10000</shutdown>
                                        </wait>
                                        <log>
                                            <prefix>GRAYLOG</prefix>
                                            <color>magenta</color>
                                        </log>
                                    </run>
                                </image>
                                <image>
                                    <alias>elasticsearch</alias>
                                    <name>${it.elasticsearch.docker.image}:${it.elasticsearch.docker.version}</name>
                                    <run>
                                        <ports>
                                            <port>+it.elasticsearch.docker.http.host:it.elasticsearch.docker.http.port:9200</port>
                                            <port>+it.elasticsearch.docker.tcp.host:it.elasticsearch.docker.tcp.port:9300</port>
                                        </ports>
                                        <cmd>elasticsearch -Des.cluster.name=${it.elasticsearch.cluster_name} -Des.network.host=_non_loopback_ -Des.action.auto_create_index=false</cmd>
                                        <wait>
                                            <http>
                                                <url>http://${it.elasticsearch.docker.http.host}:${it.elasticsearch.docker.http.port}</url>
                                                <method>GET</method>
                                                <status>200</status>
                                            </http>
                                            <time>10000</time>
                                            <shutdown>1000</shutdown>
                                        </wait>
                                        <log>
                                            <prefix>ES</prefix>
                                            <color>green</color>
                                        </log>
                                    </run>
                                </image>
                                <image>
                                    <alias>mongodb</alias>
                                    <name>${it.mongodb.docker.image}:${it.mongodb.docker.version}</name>
                                    <run>
                                        <ports>
                                            <port>+it.mongodb.docker.host:it.mongodb.docker.port:27017</port>
                                        </ports>
                                        <cmd>mongod --smallfiles</cmd>
                                        <wait>
                                            <log>\[initandlisten\] waiting for connections on port 27017</log>
                                            <time>10000</time>
                                            <shutdown>1000</shutdown>
                                        </wait>
                                        <log>
                                            <prefix>MONGO</prefix>
                                            <color>blue</color>
                                        </log>
                                    </run>
                                </image>
                            </images>
                        </configuration>
                        <executions>
                            <execution>
                                <id>start</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>build</goal>
                                    <goal>start</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>stop</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
