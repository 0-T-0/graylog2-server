<% content_for :sidebar do %>
  <h2>Welcome, <span class="highlighted">lennart</span>!</h2>
  Your current time: <%= gl_date(Time.now.to_s) %>

  <div id="sidebar-graph" style="height: 100px;"></div>  
  <%=raw flot_graph_loader(
        :max_count => Setting.get_message_max_count(current_user),
        :inject => "#sidebar-graph",
        :host => "all",
        :hours => 2
      )
  %>

  <h3>Favorite streams</h3>
  <ul id="favorite-streams">
   <% @favorites.each do |favorite| %>
    <li>
      <span class="favorite-stream-sparkline">1, 4, 4, 7, 5, 9, 10, 3, 4, 7</span>
      <%= favorite.stream.title %>
      <span class="favorite-stream-limits status-okay-text">(<%= rand(5000) %>/<%= rand(5000) %>)</span>
    </li>
   <% end %>
  </ul>

  <h3>Message collection</h3>
  <ul id="message-collection-stats">
    <li>
      Capped:
      <% if MessageCollection.is_capped? %>
        <span class="status-okay-text">OK</span>
      <% else %>
        <strong><span class="status-alarm-text">NO</span></strong>
      <% end %>
    </li>

    <li>Size: <%= number_to_human_size(MessageCollection.size) %></li>
    <li>Capped to: <%= number_to_human_size(MessageCollection.storage_size) %></li>
    <li>Objects: <%= MessageCollection.count %></li>
    <li>Average object size: <%= number_to_human_size(MessageCollection.average_object_size) %></li>
  </ul>

<% end %>

<%= javascript_include_tag 'messageupdater' %>

<div id="messages-show-quickfilter" <%= params[:filters].blank? ? nil : "class=\"messages-show-quickfilter-expanded\""  %>>
  Quickfilter
</div>

<div id="messages-content">

<h1>Messages</h1>

Currently containing <span class="highlighted"><%= number_with_delimiter(@total_count, :delimiter => '.') %></span> messages,
filtered by <span class="highlighted"><%=h @total_blacklisted_terms %></span> blacklisted terms.

<% message_count_interval = Setting.get_message_count_interval(current_user) %>
<span class="highlighted"><%=h Message.count_of_last_minutes(Setting.get_message_count_interval(message_count_interval)) %></span>
messages in the last <%=h message_count_interval %> minutes.

<%= form_tag('/', :method => :get) do -%>
  <table id="messages-quickfilter" style="display: <%= params[:filters].blank? ? 'none' : 'block' %>">
    <thead>
      <tr>
        <th>Message</th>
        <th>Timeframe</th>
        <th>Facility</th>
        <th>Severity</th>
        <th>Host</th>
        <th>&nbsp;</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td class="messages-quickfilter-c-message"><%= text_field_tag "filters[message]", params[:filters].blank? ? nil : params[:filters][:message] %></td>
        <td><%= text_field_tag "filters[date]", params[:filters].blank? ? nil : params[:filters][:date] %></td>
        <td><%= select_tag "filters[facility]", raw("<option></option>" + options_for_select(get_ordered_facilities_for_select, :selected => get_quickfilter_selected(params[:filters], :facility))) %></td>
        <td><%= select_tag "filters[severity]", raw("<option></option>" + options_for_select(get_ordered_severities_for_select, :selected => get_quickfilter_selected(params[:filters], :severity))) %></td>
        <td><%= select_tag "filters[host]", raw("<option></option>" + options_for_select(Host.all.collect {|host| [ h(host.host) ] }, :selected => get_quickfilter_selected(params[:filters], :host, true))) %></td>
        <td><%= submit_tag "Quickfilter!" %></td>
      </tr>
    </tbody>
  </table>
<% end -%>

<% unless params[:filters].blank? %>
<div id="messages-quickfilter-delete">
  <%= form_tag('/messages/deletebyquickfilter') do -%>
    <%= hidden_field_tag 'filters', params[:filters].to_json %>
    <%= submit_tag "Delete all messages hit by this quickfilter", :confirm => "Really delete all messages hit by this quickfilter?" %>
  <% end -%>
</div>
<% end %>

<br style="clear: both;" />

<%= render :partial => "messages/table", :locals => { :messages => @messages, :inline_version => true, :total_messages => @total_count } %>
</div>
